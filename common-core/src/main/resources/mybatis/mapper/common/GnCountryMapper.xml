<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.x.common.dao.mapper.interfaces.GnCountryMapper" >
  <resultMap id="BaseResultMap" type="com.x.common.dao.mapper.bo.GnCountry" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="COUNTRY_NAME_CN" property="countryNameCn" jdbcType="VARCHAR" />
    <result column="COUNTRY_NAME_EN" property="countryNameEn" jdbcType="VARCHAR" />
    <result column="COUNTRY_VALUE" property="countryValue" jdbcType="VARCHAR" />
    <result column="COUNTRY_CODE" property="countryCode" jdbcType="VARCHAR" />
    <result column="REGULAR_EXPRESSION" property="regularExpression" jdbcType="VARCHAR" />
    <result column="ORDER_ID" property="orderId" jdbcType="INTEGER" />
    <result column="OPERATION_TIME" property="operationTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, COUNTRY_NAME_CN, COUNTRY_NAME_EN, COUNTRY_VALUE, COUNTRY_CODE, REGULAR_EXPRESSION, 
    ORDER_ID, OPERATION_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.x.common.dao.mapper.bo.GnCountryCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from gn_country
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from gn_country
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from gn_country
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.x.common.dao.mapper.bo.GnCountryCriteria" >
    delete from gn_country
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.x.common.dao.mapper.bo.GnCountry" >
    insert into gn_country (ID, COUNTRY_NAME_CN, COUNTRY_NAME_EN, 
      COUNTRY_VALUE, COUNTRY_CODE, REGULAR_EXPRESSION, 
      ORDER_ID, OPERATION_TIME)
    values (#{id,jdbcType=INTEGER}, #{countryNameCn,jdbcType=VARCHAR}, #{countryNameEn,jdbcType=VARCHAR}, 
      #{countryValue,jdbcType=VARCHAR}, #{countryCode,jdbcType=VARCHAR}, #{regularExpression,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=INTEGER}, #{operationTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.x.common.dao.mapper.bo.GnCountry" >
    insert into gn_country
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="countryNameCn != null" >
        COUNTRY_NAME_CN,
      </if>
      <if test="countryNameEn != null" >
        COUNTRY_NAME_EN,
      </if>
      <if test="countryValue != null" >
        COUNTRY_VALUE,
      </if>
      <if test="countryCode != null" >
        COUNTRY_CODE,
      </if>
      <if test="regularExpression != null" >
        REGULAR_EXPRESSION,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="operationTime != null" >
        OPERATION_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="countryNameCn != null" >
        #{countryNameCn,jdbcType=VARCHAR},
      </if>
      <if test="countryNameEn != null" >
        #{countryNameEn,jdbcType=VARCHAR},
      </if>
      <if test="countryValue != null" >
        #{countryValue,jdbcType=VARCHAR},
      </if>
      <if test="countryCode != null" >
        #{countryCode,jdbcType=VARCHAR},
      </if>
      <if test="regularExpression != null" >
        #{regularExpression,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.x.common.dao.mapper.bo.GnCountryCriteria" resultType="java.lang.Integer" >
    select count(*) from gn_country
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gn_country
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.countryNameCn != null" >
        COUNTRY_NAME_CN = #{record.countryNameCn,jdbcType=VARCHAR},
      </if>
      <if test="record.countryNameEn != null" >
        COUNTRY_NAME_EN = #{record.countryNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.countryValue != null" >
        COUNTRY_VALUE = #{record.countryValue,jdbcType=VARCHAR},
      </if>
      <if test="record.countryCode != null" >
        COUNTRY_CODE = #{record.countryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regularExpression != null" >
        REGULAR_EXPRESSION = #{record.regularExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.operationTime != null" >
        OPERATION_TIME = #{record.operationTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gn_country
    set ID = #{record.id,jdbcType=INTEGER},
      COUNTRY_NAME_CN = #{record.countryNameCn,jdbcType=VARCHAR},
      COUNTRY_NAME_EN = #{record.countryNameEn,jdbcType=VARCHAR},
      COUNTRY_VALUE = #{record.countryValue,jdbcType=VARCHAR},
      COUNTRY_CODE = #{record.countryCode,jdbcType=VARCHAR},
      REGULAR_EXPRESSION = #{record.regularExpression,jdbcType=VARCHAR},
      ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      OPERATION_TIME = #{record.operationTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.x.common.dao.mapper.bo.GnCountry" >
    update gn_country
    <set >
      <if test="countryNameCn != null" >
        COUNTRY_NAME_CN = #{countryNameCn,jdbcType=VARCHAR},
      </if>
      <if test="countryNameEn != null" >
        COUNTRY_NAME_EN = #{countryNameEn,jdbcType=VARCHAR},
      </if>
      <if test="countryValue != null" >
        COUNTRY_VALUE = #{countryValue,jdbcType=VARCHAR},
      </if>
      <if test="countryCode != null" >
        COUNTRY_CODE = #{countryCode,jdbcType=VARCHAR},
      </if>
      <if test="regularExpression != null" >
        REGULAR_EXPRESSION = #{regularExpression,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="operationTime != null" >
        OPERATION_TIME = #{operationTime,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.x.common.dao.mapper.bo.GnCountry" >
    update gn_country
    set COUNTRY_NAME_CN = #{countryNameCn,jdbcType=VARCHAR},
      COUNTRY_NAME_EN = #{countryNameEn,jdbcType=VARCHAR},
      COUNTRY_VALUE = #{countryValue,jdbcType=VARCHAR},
      COUNTRY_CODE = #{countryCode,jdbcType=VARCHAR},
      REGULAR_EXPRESSION = #{regularExpression,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=INTEGER},
      OPERATION_TIME = #{operationTime,jdbcType=BIGINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>