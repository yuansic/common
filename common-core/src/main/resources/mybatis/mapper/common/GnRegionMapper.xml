<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.x.common.dao.mapper.interfaces.GnRegionMapper" >
  <resultMap id="BaseResultMap" type="com.x.common.dao.mapper.bo.GnRegion" >
    <id column="region_code" property="regionCode" jdbcType="VARCHAR" />
    <result column="region_name_en" property="regionNameEn" jdbcType="VARCHAR" />
    <result column="region_name_cn" property="regionNameCn" jdbcType="VARCHAR" />
    <result column="region_level" property="regionLevel" jdbcType="INTEGER" />
    <result column="parent_region_code" property="parentRegionCode" jdbcType="VARCHAR" />
    <result column="parent_region_en" property="parentRegionEn" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    region_code, region_name_en, region_name_cn, region_level, parent_region_code, parent_region_en
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.x.common.dao.mapper.bo.GnRegionCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from gn_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from gn_region
    where region_code = #{regionCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from gn_region
    where region_code = #{regionCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.x.common.dao.mapper.bo.GnRegionCriteria" >
    delete from gn_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.x.common.dao.mapper.bo.GnRegion" >
    insert into gn_region (region_code, region_name_en, region_name_cn, 
      region_level, parent_region_code, parent_region_en
      )
    values (#{regionCode,jdbcType=VARCHAR}, #{regionNameEn,jdbcType=VARCHAR}, #{regionNameCn,jdbcType=VARCHAR}, 
      #{regionLevel,jdbcType=INTEGER}, #{parentRegionCode,jdbcType=VARCHAR}, #{parentRegionEn,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.x.common.dao.mapper.bo.GnRegion" >
    insert into gn_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="regionCode != null" >
        region_code,
      </if>
      <if test="regionNameEn != null" >
        region_name_en,
      </if>
      <if test="regionNameCn != null" >
        region_name_cn,
      </if>
      <if test="regionLevel != null" >
        region_level,
      </if>
      <if test="parentRegionCode != null" >
        parent_region_code,
      </if>
      <if test="parentRegionEn != null" >
        parent_region_en,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="regionCode != null" >
        #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="regionNameEn != null" >
        #{regionNameEn,jdbcType=VARCHAR},
      </if>
      <if test="regionNameCn != null" >
        #{regionNameCn,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null" >
        #{regionLevel,jdbcType=INTEGER},
      </if>
      <if test="parentRegionCode != null" >
        #{parentRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="parentRegionEn != null" >
        #{parentRegionEn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.x.common.dao.mapper.bo.GnRegionCriteria" resultType="java.lang.Integer" >
    select count(*) from gn_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gn_region
    <set >
      <if test="record.regionCode != null" >
        region_code = #{record.regionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regionNameEn != null" >
        region_name_en = #{record.regionNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.regionNameCn != null" >
        region_name_cn = #{record.regionNameCn,jdbcType=VARCHAR},
      </if>
      <if test="record.regionLevel != null" >
        region_level = #{record.regionLevel,jdbcType=INTEGER},
      </if>
      <if test="record.parentRegionCode != null" >
        parent_region_code = #{record.parentRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentRegionEn != null" >
        parent_region_en = #{record.parentRegionEn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gn_region
    set region_code = #{record.regionCode,jdbcType=VARCHAR},
      region_name_en = #{record.regionNameEn,jdbcType=VARCHAR},
      region_name_cn = #{record.regionNameCn,jdbcType=VARCHAR},
      region_level = #{record.regionLevel,jdbcType=INTEGER},
      parent_region_code = #{record.parentRegionCode,jdbcType=VARCHAR},
      parent_region_en = #{record.parentRegionEn,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.x.common.dao.mapper.bo.GnRegion" >
    update gn_region
    <set >
      <if test="regionNameEn != null" >
        region_name_en = #{regionNameEn,jdbcType=VARCHAR},
      </if>
      <if test="regionNameCn != null" >
        region_name_cn = #{regionNameCn,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null" >
        region_level = #{regionLevel,jdbcType=INTEGER},
      </if>
      <if test="parentRegionCode != null" >
        parent_region_code = #{parentRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="parentRegionEn != null" >
        parent_region_en = #{parentRegionEn,jdbcType=VARCHAR},
      </if>
    </set>
    where region_code = #{regionCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.x.common.dao.mapper.bo.GnRegion" >
    update gn_region
    set region_name_en = #{regionNameEn,jdbcType=VARCHAR},
      region_name_cn = #{regionNameCn,jdbcType=VARCHAR},
      region_level = #{regionLevel,jdbcType=INTEGER},
      parent_region_code = #{parentRegionCode,jdbcType=VARCHAR},
      parent_region_en = #{parentRegionEn,jdbcType=VARCHAR}
    where region_code = #{regionCode,jdbcType=VARCHAR}
  </update>
</mapper>