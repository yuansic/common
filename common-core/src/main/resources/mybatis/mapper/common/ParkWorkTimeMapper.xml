<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.x.common.dao.mapper.interfaces.ParkWorkTimeMapper" >
  <resultMap id="BaseResultMap" type="com.x.common.dao.mapper.bo.ParkWorkTime" >
    <result column="WORK_ID" property="workId" jdbcType="VARCHAR" />
    <result column="PARK_ID_INNER" property="parkIdInner" jdbcType="VARCHAR" />
    <result column="START_TIME" property="startTime" jdbcType="TIME" />
    <result column="END_TIME" property="endTime" jdbcType="TIME" />
    <result column="WORK_FLAG" property="workFlag" jdbcType="VARCHAR" />
    <result column="BUSY_LEVEL" property="busyLevel" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="LIMIT_STOP_TIME" property="limitStopTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    WORK_ID, PARK_ID_INNER, START_TIME, END_TIME, WORK_FLAG, BUSY_LEVEL, STATUS, LIMIT_STOP_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.x.common.dao.mapper.bo.ParkWorkTimeCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from park_work_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.x.common.dao.mapper.bo.ParkWorkTimeCriteria" >
    delete from park_work_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.x.common.dao.mapper.bo.ParkWorkTime" >
    insert into park_work_time (WORK_ID, PARK_ID_INNER, START_TIME, 
      END_TIME, WORK_FLAG, BUSY_LEVEL, 
      STATUS, LIMIT_STOP_TIME)
    values (#{workId,jdbcType=VARCHAR}, #{parkIdInner,jdbcType=VARCHAR}, #{startTime,jdbcType=TIME}, 
      #{endTime,jdbcType=TIME}, #{workFlag,jdbcType=VARCHAR}, #{busyLevel,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{limitStopTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.x.common.dao.mapper.bo.ParkWorkTime" >
    insert into park_work_time
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        WORK_ID,
      </if>
      <if test="parkIdInner != null" >
        PARK_ID_INNER,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="workFlag != null" >
        WORK_FLAG,
      </if>
      <if test="busyLevel != null" >
        BUSY_LEVEL,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="limitStopTime != null" >
        LIMIT_STOP_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="parkIdInner != null" >
        #{parkIdInner,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIME},
      </if>
      <if test="workFlag != null" >
        #{workFlag,jdbcType=VARCHAR},
      </if>
      <if test="busyLevel != null" >
        #{busyLevel,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="limitStopTime != null" >
        #{limitStopTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.x.common.dao.mapper.bo.ParkWorkTimeCriteria" resultType="java.lang.Integer" >
    select count(*) from park_work_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update park_work_time
    <set >
      <if test="record.workId != null" >
        WORK_ID = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.parkIdInner != null" >
        PARK_ID_INNER = #{record.parkIdInner,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIME},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIME},
      </if>
      <if test="record.workFlag != null" >
        WORK_FLAG = #{record.workFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.busyLevel != null" >
        BUSY_LEVEL = #{record.busyLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.limitStopTime != null" >
        LIMIT_STOP_TIME = #{record.limitStopTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update park_work_time
    set WORK_ID = #{record.workId,jdbcType=VARCHAR},
      PARK_ID_INNER = #{record.parkIdInner,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=TIME},
      END_TIME = #{record.endTime,jdbcType=TIME},
      WORK_FLAG = #{record.workFlag,jdbcType=VARCHAR},
      BUSY_LEVEL = #{record.busyLevel,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      LIMIT_STOP_TIME = #{record.limitStopTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>